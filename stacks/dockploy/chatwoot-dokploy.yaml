version: '3'
services:
  rails:
    image: 'ghcr.io/fazer-ai/chatwoot:latest'
    pull_policy: always
    volumes:
      - 'storage:/app/storage'
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - DEFAULT_LOCALE=pt_BR
      - 'FRONTEND_URL=https://chat.b7g.app'
      - 'INTERNAL_HOST_URL=http://rails:3000'
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - 'POSTGRES_USERNAME=postgres'
      - 'POSTGRES_PASSWORD=3e6a2e1d5861027de8327f2145bab206'
      - 'POSTGRES_DATABASE=chatwoot_production'
      - 'SECRET_KEY_BASE=3e6a2e1d5861027de8327f2145bab206'
      - 'REDIS_URL=redis://redis:6379'
      - 'REDIS_PASSWORD='
      - 'BAILEYS_PROVIDER_DEFAULT_CLIENT_NAME=-Chatwoot'
      - 'BAILEYS_PROVIDER_DEFAULT_URL=http://baileys-api:3025'
      - 'BAILEYS_PROVIDER_DEFAULT_API_KEY=194F83A5E420E2898283782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77'
      - BAILEYS_PROVIDER_USE_INTERNAL_HOST_URL=true
      - 'MAILER_SENDER_EMAIL=marcelu.phd@gmail.com '
      - 'RESEND_API_KEY=3e6a2e1d5861027de8327f2145bab206'
      - 'BRAND_ASSETS_URL=https://chat.b7g.app'
    entrypoint: docker/entrypoints/rails.sh
    command:
      - bundle
      - exec
      - rails
      - s
      - '-p'
      - '3000'
      - '-b'
      - 0.0.0.0
    restart: always
    post_start:
      -
        command:
          - sh
          - '-c'
          - 'bundle exec rails db:chatwoot_prepare && bundle exec rails branding:update && if [ -n "$${BRAND_ASSETS_URL}" ]; then deployment/extract_brand_assets.sh "$${BRAND_ASSETS_URL}"; fi'
    healthcheck:
      test:
        - CMD-SHELL
        - 'wget -qO- --header="Accept: text/html" http://127.0.0.1:3000/'
      interval: 60s
      timeout: 20s
      retries: 10
  sidekiq:
    image: 'ghcr.io/fazer-ai/chatwoot:latest'
    pull_policy: always
    volumes:
      - 'storage:/app/storage'
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - DEFAULT_LOCALE=pt_BR
      - 'FRONTEND_URL=https://chat.b7g.app'
      - 'INTERNAL_HOST_URL=http://rails:3000'
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - 'POSTGRES_USERNAME=postgres'
      - 'POSTGRES_PASSWORD=3e6a2e1d5861027de8327f2145bab206'
      - 'POSTGRES_DATABASE=chatwoot_production'
      - 'SECRET_KEY_BASE=3e6a2e1d5861027de8327f2145bab206'
      - 'REDIS_URL=redis://redis:6379'
      - 'REDIS_PASSWORD='
      - 'BAILEYS_PROVIDER_DEFAULT_CLIENT_NAME=-Chatwoot'
      - 'BAILEYS_PROVIDER_DEFAULT_URL=http://baileys-api:3025'
      - 'BAILEYS_PROVIDER_DEFAULT_API_KEY=194F83A5E420E2898283782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77'
      - BAILEYS_PROVIDER_USE_INTERNAL_HOST_URL=true
      - 'MAILER_SENDER_EMAIL=marcelu.phd@gmail.com '
      - 'RESEND_API_KEY=3e6a2e1d5861027de8327f2145bab206'
    command:
      - bundle
      - exec
      - sidekiq
      - '-C'
      - config/sidekiq.yml
    restart: always
    healthcheck:
      test:
        - CMD-SHELL
        - 'ps aux | grep [s]idekiq'
      interval: 20s
      timeout: 20s
      retries: 10
  postgres:
    image: 'ghcr.io/fazer-ai/postgres-16-pgvector:latest'
    restart: always
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    environment:
      - 'POSTGRES_DB=chatwoot'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=3e6a2e1d5861027de8327f2145bab206'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -h localhost -p 5432 -U postgres -d chatwoot'
      interval: 20s
      timeout: 20s
      retries: 10
  redis:
    image: 'redis:alpine'
    restart: always
    command:
      - sh
      - '-c'
      - 'redis-server '
    volumes:
      - 'redis:/data'
    environment:
      - 'REDIS_PASSWORD='
    healthcheck:
      test:
        - CMD-SHELL
        - 'redis-cli -h localhost -p 6379 -a ping'
      interval: 20s
      timeout: 20s
      retries: 10
  baileys-api:
    image: 'ghcr.io/fazer-ai/baileys-api:latest'
    pull_policy: always
    volumes:
      - 'storage:/app/storage'
    environment:
      - NODE_ENV=production
      - 'REDIS_URL=redis://redis:6379'
      - 'REDIS_PASSWORD='
      - 'LOG_LEVEL=info'
      - 'BAILEYS_LOG_LEVEL=error'
      - 'BAILEYS_PROVIDER_DEFAULT_API_KEY=194F83A5E420E2898283782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77'
    command:
      - sh
      - '-c'
      - 'bun manage-api-keys create user 194F83A5E420E2898283782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77 && bun start'
    restart: always
    healthcheck:
      test:
        - CMD-SHELL
        - 'wget -qO- http://localhost:3025/status'
      interval: 20s
      timeout: 20s
      retries: 10
