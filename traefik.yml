version: '3.8'

services:
  traefik:
    image: traefik:v3.4  # Versão mais recente do Traefik v3
    ports:
       # HTTP (porta 80)
       - target: 80
         published: 80
         protocol: tcp
         mode: host
       # HTTPS (porta 443) 
       - target: 443
         published: 443
         protocol: tcp
         mode: host

     ##    # HTTP (porta 8888)
     ## - target: 80
     ##   published: 8888
     ##   protocol: tcp
     ##   mode: host
     ## # HTTPS (porta 8443) 
     ## - target: 443
     ##   published: 8443
     ##   protocol: tcp
     ##   mode: host

      # Dashboard do Traefik (opcional - remover em produção)
      # - target: 8080
      #   published: 8080
      #   protocol: tcp
      #   mode: host
    
    volumes:
      # Acesso ao Docker socket para descoberta de serviços
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Volume para certificados SSL/TLS (Let's Encrypt)
      - traefik_certificates:/certificates
      # Adicione esta linha para o provedor de arquivo red local
      - ./var/data/config_externa:/config_externa:ro

    command:
      # Log level
      - --log.level=INFO
      
      # API e Dashboard (comentado para produção)
      # - --api.dashboard=true
      # - --api.insecure=true
      
      # Entrypoints (pontos de entrada)
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      #- --entryPoints.web.address=:8888
      #- --entryPoints.websecure.address=:8443

      # Provider Docker Swarm
      - --providers.swarm=true
      - --providers.swarm.endpoint=unix:///var/run/docker.sock
      - --providers.swarm.exposedByDefault=false
      - --providers.swarm.network=traefik_public
      
      # Provedor de Arquivo
      - --providers.file.directory=/config_externa
      - --providers.file.watch=true

      # Let's Encrypt (certificados SSL automáticos)
      - --certificatesResolvers.letsencrypt.acme.tlsChallenge=true
      - --certificatesResolvers.letsencrypt.acme.email=marcelu.phd@gmail.com
      - --certificatesResolvers.letsencrypt.acme.storage=/certificates/acme.json
      
      # Redirect HTTP para HTTPS globalmente
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      
      # Metrics (opcional)
      # - --metrics.prometheus=true
      # - --metrics.prometheus.addEntryPointsLabels=true
      # - --metrics.prometheus.addServicesLabels=true
    
    networks:
      - traefik_public
    
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          # Executa apenas em nós manager
          - node.role == manager
          # Opcional: usar label específico para nó com certificados
          # - node.labels.traefik-public.traefik-public-certificates == true
      
      #labels:
        # Labels do dashboard comentadas para produção
        # - traefik.enable=true
        # - traefik.docker.network=traefik_public
        
        # # Router para dashboard
        # - traefik.http.routers.traefik-dashboard.rule=Host(`traefik.senaia.in`)
        # - traefik.http.routers.traefik-dashboard.entrypoints=websecure
        # - traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt
        # - traefik.http.routers.traefik-dashboard.service=api@internal
        
        # # Middleware de autenticação para dashboard (opcional)
        # # - traefik.http.routers.traefik-dashboard.middlewares=traefik-auth
        # # - traefik.http.middlewares.traefik-auth.basicauth.users=admin:$2y$10$hash...
        
        # # Service para o próprio Traefik (usado pelo dashboard)
        # - traefik.http.services.traefik.loadbalancer.server.port=8080
      
      update_config:
        parallelism: 1      # Um por vez (segurança)
        delay: 30s          # Tempo maior para verificar
        order: start-first  # Zero downtime
        failure_action: rollback
      
      restart_policy:
        condition: on-failure
        delay: 10s          # Delay maior para load balancer
        max_attempts: 5     # Mais tentativas

networks:
  traefik_public:
    external: true

volumes:
  traefik_certificates: