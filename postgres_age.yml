version: '3.8'

services:
  postgres2:
    image: andersonlemes/pg16:v1.5.0 #imagem disponivel caso queira usar

    ports:
      - 5434:5432 
    
    # Configurações de ambiente
    environment:
      # Configurações básicas - ALTERE AQUI
      POSTGRES_DB: lightrag
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: "P4p=eb3-8&7bE"  # Senha com caracteres seguros
      
      # Configurações de locale (usando C.UTF-8 que está disponível)
      POSTGRES_INITDB_ARGS: "--locale=C.UTF-8 --encoding=UTF8"
      
      # Timezone
      TZ: America/Sao_Paulo
      PGTZ: America/Sao_Paulo
    
    # Volumes para persistência
    volumes:
      # Dados principais do PostgreSQL
      - postgres_data2:/var/lib/postgresql/data
      
      # Backup local (opcional)
      # - /opt/postgres/backups:/backups
    
    # Redes
    networks:
      - app_network  # Rede para aplicações se conectarem
    
    # Configurações de deploy
    deploy:
      mode: replicated
      replicas: 1
      
      # Recursos (ajuste conforme seu hardware)
      resources:
        limits:
          cpus: '1.0'      # Máximo 2 CPUs
          memory: 2G       # Máximo 4GB RAM
        #reservations:
          #cpus: '1.0'      # Mínimo 1 CPU garantida
          #memory: 2G       # Mínimo 2GB RAM garantida
      
      # Constraints para execução
      placement:
        constraints:
          - node.role == manager  # Só roda em nós manager
      
      # Configurações de atualização
      update_config:
        parallelism: 1           # Atualiza um container por vez
        delay: 30s               # Aguarda 30s entre atualizações
        order: stop-first        # Para o antigo antes de iniciar novo
        failure_action: rollback # Volta versão anterior se falhar
        monitor: 60s             # Monitora por 60s após atualização
      
      # Política de restart
      restart_policy:
        condition: on-failure    # Só reinicia em caso de falha
        delay: 10s              # Aguarda 10s antes de reiniciar
        max_attempts: 3         # Máximo 3 tentativas de restart
        window: 120s            # Janela de 2min para contar tentativas
    
    # Verificação de saúde
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d lightrag"]
      interval: 30s    # Verifica a cada 30 segundos
      timeout: 10s     # Timeout de 10 segundos
      retries: 3       # 3 tentativas antes de marcar como unhealthy
      start_period: 60s # Aguarda 60s após start para começar verificações
    
    # Configurações otimizadas do PostgreSQL
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=512MB
      -c effective_cache_size=2GB
      -c maintenance_work_mem=128MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c max_worker_processes=8
      -c max_parallel_workers_per_gather=4
      -c max_parallel_workers=8
      -c max_parallel_maintenance_workers=4
      -c log_destination=stderr
      -c log_min_duration_statement=1000
      -c log_statement=ddl
      -c log_checkpoints=on
      -c log_connections=on
      -c log_disconnections=on
      -c log_lock_waits=on
      -c log_temp_files=0
      -c log_autovacuum_min_duration=0
      -c timezone='America/Sao_Paulo'

# Redes
networks:
  app_network:
    driver: overlay
    external: true  

# Volumes
volumes:
  postgres_data2:
    driver: local
 