version: "3.8"

services:
  # PostgreSQL Database with pgvector for Supabase
  supabase_db:
    image: supabase/postgres:15.1.0.147
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network

    environment:
      # Database Configuration
      - POSTGRES_HOST=/var/run/postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=supabase_admin
      - POSTGRES_PASSWORD=Ma1x1x0x!!Ma1x1x0x!!
      - POSTGRES_INITDB_ARGS=--locale=C.UTF-8 --encoding=UTF8

      # JWT Configuration
      - JWT_SECRET=194F83A5E420E2908213782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77
      - JWT_EXP=3600

      # Timezone
      - TZ=America/Asuncion
      - PGTZ=America/Asuncion

    volumes:
      - supabase_db_data:/var/lib/postgresql/data
      - supabase_db_config:/etc/postgresql-custom

    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c log_min_messages=fatal
      -c log_statement=all
      -c shared_preload_libraries=pg_stat_statements,pgaudit,plpgsql,plpgsql_check,pg_stat_monitor,pglogical,pg_cron,pg_net,pgsql_http,pg_repack,pg_hashids
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "2.0"
          memory: 2048M
        reservations:
          cpus: "1.0"
          memory: 1024M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supabase_admin -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Supabase Kong API Gateway
  supabase_kong:
    image: kong:2.8.1
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network
      - traefik_public

    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/var/lib/kong/kong.yml
      - KONG_DNS_ORDER=LAST,A,CNAME
      - KONG_PLUGINS=request-transformer,cors,key-auth,acl,basic-auth
      - KONG_NGINX_PROXY_PROXY_BUFFER_SIZE=160k
      - KONG_NGINX_PROXY_PROXY_BUFFERS=64 160k
      - KONG_NGINX_PROXY_LARGE_CLIENT_HEADER_BUFFERS=64 160k
      - KONG_LOG_LEVEL=warn
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr

    volumes:
      - supabase_kong_data:/var/lib/kong

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

      # Traefik Labels
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_public

        # API Gateway
        - traefik.http.routers.supabase-api.rule=Host(`supabase.senaia.in`) && PathPrefix(`/rest/`,`/auth/`,`/graphql/`,`/realtime/`,`/storage/`,`/edge-functions/`)
        - traefik.http.routers.supabase-api.entrypoints=websecure
        - traefik.http.routers.supabase-api.tls.certresolver=letsencrypt
        - traefik.http.services.supabase-api.loadbalancer.server.port=8000

        # Headers
        - traefik.http.middlewares.supabase-headers.headers.customrequestheaders.X-Forwarded-Proto=https
        - traefik.http.middlewares.supabase-headers.headers.customrequestheaders.X-Forwarded-Port=443
        - traefik.http.routers.supabase-api.middlewares=supabase-headers

      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  # Supabase Auth (GoTrue)
  supabase_auth:
    image: supabase/gotrue:v2.132.3
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network

    environment:
      # API Configuration
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - GOTRUE_API_EXTERNAL_URL=https://supabase.senaia.in/auth/v1

      # Database
      - GOTRUE_DB_DRIVER=postgres
      - GOTRUE_DB_DATABASE_URL=postgresql://supabase_admin:Ma1x1x0x!!Ma1x1x0x!!@supabase_db:5432/postgres?search_path=auth&sslmode=disable

      # JWT
      - GOTRUE_JWT_SECRET=194F83A5E420E2908213782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_JWT_DEFAULT_GROUP_NAME=authenticated

      # Site Configuration
      - GOTRUE_SITE_URL=https://supabase.senaia.in
      - GOTRUE_URI_ALLOW_LIST=https://supabase.senaia.in

      # Email Configuration
      - GOTRUE_MAILER_AUTOCONFIRM=true
      - GOTRUE_SMTP_HOST=smtp.gmail.com
      - GOTRUE_SMTP_PORT=587
      - GOTRUE_SMTP_USER=marcelu.phd@gmail.com
      - GOTRUE_SMTP_PASS=edmoauhradsarvmw
      - GOTRUE_SMTP_ADMIN_EMAIL=marcelu.phd@gmail.com
      - GOTRUE_MAILER_URLPATHS_INVITE=/auth/v1/verify
      - GOTRUE_MAILER_URLPATHS_CONFIRMATION=/auth/v1/verify
      - GOTRUE_MAILER_URLPATHS_RECOVERY=/auth/v1/verify
      - GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE=/auth/v1/verify

      # Security
      - GOTRUE_DISABLE_SIGNUP=false
      - GOTRUE_EXTERNAL_EMAIL_DISABLED=false
      - GOTRUE_LOG_LEVEL=INFO
      - GOTRUE_OPERATOR_TOKEN=super-secret-operator-token

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Supabase REST API (PostgREST)
  supabase_rest:
    image: postgrest/postgrest:v12.0.1
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network

    environment:
      - PGRST_DB_URI=postgresql://authenticator:Ma1x1x0x!!Ma1x1x0x!!@supabase_db:5432/postgres
      - PGRST_DB_SCHEMAS=public,storage,graphql_public
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=194F83A5E420E2908213782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77
      - PGRST_DB_USE_LEGACY_GUCS=false
      - PGRST_APP_SETTINGS_JWT_SECRET=194F83A5E420E2908213782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77
      - PGRST_APP_SETTINGS_JWT_EXP=3600
      - PGRST_SERVER_HOST=0.0.0.0
      - PGRST_SERVER_PORT=3000
      - PGRST_LOG_LEVEL=info

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Supabase Realtime
  supabase_realtime:
    image: supabase/realtime:v2.25.50
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network

    environment:
      - PORT=4000
      - DB_HOST=supabase_db
      - DB_PORT=5432
      - DB_USER=supabase_admin
      - DB_PASSWORD=Ma1x1x0x!!Ma1x1x0x!!
      - DB_NAME=postgres
      - DB_SSL=false
      - API_JWT_SECRET=194F83A5E420E2908213782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77
      - FLY_ALLOC_ID=fly123
      - FLY_APP_NAME=realtime
      - SECRET_KEY_BASE=194F83A5E420E2908213782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77194F83A5E420E2908213782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77
      - ERL_AFLAGS=-proto_dist inet_tcp
      - ENABLE_TAILSCALE=false
      - DNS_NODES='finder@realtime-0.realtime.default.svc.cluster.local'

    command: >
      sh -c "/app/bin/migrate && /app/bin/realtime start"

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Supabase Storage API
  supabase_storage:
    image: supabase/storage-api:v0.40.4
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network

    environment:
      - ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      - SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      - POSTGREST_URL=http://supabase_rest:3000
      - PGRST_JWT_SECRET=194F83A5E420E2908213782FE1E64C2E7C07B5C3F7409BA90138E2D1E658BD77
      - DATABASE_URL=postgresql://supabase_admin:Ma1x1x0x!!Ma1x1x0x!!@supabase_db:5432/postgres
      - FILE_SIZE_LIMIT=52428800
      - STORAGE_BACKEND=file
      - FILE_STORAGE_BACKEND_PATH=/var/lib/storage
      - TENANT_ID=stub
      - REGION=us-east-1
      - GLOBAL_S3_BUCKET=stub
      - ENABLE_IMAGE_TRANSFORMATION=true
      - IMGPROXY_URL=http://supabase_imgproxy:5001

    volumes:
      - supabase_storage_data:/var/lib/storage

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Supabase Image Proxy
  supabase_imgproxy:
    image: darthsim/imgproxy:v3.8.0
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network

    environment:
      - IMGPROXY_BIND=0.0.0.0:5001
      - IMGPROXY_LOCAL_FILESYSTEM_ROOT=/var/lib/storage
      - IMGPROXY_USE_ETAG=true
      - IMGPROXY_ENABLE_WEBP_DETECTION=true

    volumes:
      - supabase_storage_data:/var/lib/storage:ro

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Supabase Studio (Dashboard)
  supabase_studio:
    image: supabase/studio:20240326-5e5586d
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network
      - traefik_public

    environment:
      - STUDIO_PG_META_URL=http://supabase_meta:8080
      - POSTGRES_PASSWORD=Ma1x1x0x!!Ma1x1x0x!!
      - DEFAULT_ORGANIZATION_NAME=Senaia
      - DEFAULT_PROJECT_NAME=Supabase Project
      - SUPABASE_URL=https://supabase.senaia.in
      - SUPABASE_REST_URL=https://supabase.senaia.in/rest/v1/
      - SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      - SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      - LOGFLARE_API_KEY=your-logflare-key
      - LOGFLARE_URL=https://api.logflare.app
      - NEXT_PUBLIC_ENABLE_LOGS=true

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

      # Traefik Labels para Studio
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik_public

        # Studio Dashboard
        - traefik.http.routers.supabase-studio.rule=Host(`supabase.senaia.in`)
        - traefik.http.routers.supabase-studio.entrypoints=websecure
        - traefik.http.routers.supabase-studio.tls.certresolver=letsencrypt
        - traefik.http.services.supabase-studio.loadbalancer.server.port=3000

        # Headers
        - traefik.http.middlewares.supabase-studio-headers.headers.customrequestheaders.X-Forwarded-Proto=https
        - traefik.http.middlewares.supabase-studio-headers.headers.customrequestheaders.X-Forwarded-Port=443
        - traefik.http.routers.supabase-studio.middlewares=supabase-studio-headers

      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3

  # Supabase Meta API
  supabase_meta:
    image: supabase/postgres-meta:v0.68.0
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network

    environment:
      - PG_META_PORT=8080
      - PG_META_DB_HOST=supabase_db
      - PG_META_DB_PORT=5432
      - PG_META_DB_NAME=postgres
      - PG_META_DB_USER=supabase_admin
      - PG_META_DB_PASSWORD=Ma1x1x0x!!Ma1x1x0x!!

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Supabase Vector/Embeddings
  supabase_vector:
    image: ankane/pgvector:v0.5.0
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"

    networks:
      - app_network

    environment:
      - POSTGRES_HOST=supabase_db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=supabase_admin
      - POSTGRES_PASSWORD=Ma1x1x0x!!Ma1x1x0x!!

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

# Networks
networks:
  app_network:
    external: true
  traefik_public:
    external: true

# Volumes
volumes:
  supabase_db_data:
    driver: local
  supabase_db_config:
    driver: local
  supabase_kong_data:
    driver: local
  supabase_storage_data:
    driver: local