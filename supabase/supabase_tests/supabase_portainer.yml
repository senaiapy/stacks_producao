version: "3.8"

configs:
  kong_config:
    external: true
    name: supabase_kong_config


services:
  postgres:
    image: postgres:16-alpine
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: supabase_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Ma1x1x0x!!Ma1x1x0x!!
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d supabase_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  kong:
    image: kong:2.8.1
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    networks:
      - app_network
      - traefik_public
    configs:
      - source: kong_config
        target: /var/lib/kong/kong.yml
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzU2ODY4NDAwLCJleHAiOjE5MTQ2MzQ4MDB9.92l2hcU3eK2GZCkzkLujEpl45fXqCN_p3Ad9qsxijao
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiaXNzIjoic3VwYWJhc2UiLCJpYXQiOjE3NTY4Njg0MDAsImV4cCI6MTkxNDYzNDgwMH0.bZ8_RsHDV_LMWXfjKbaVtC1mX4DWcrMT6iqP6EHovnI
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      labels:
        - "traefik.enable=true"
        - "traefik.constraint-label=traefik_public"
        - "traefik.http.routers.supabase-api.rule=Host(`supabase.senaia.in`)"
        - "traefik.http.routers.supabase-api.entrypoints=websecure"
        - "traefik.http.routers.supabase-api.tls.certresolver=letsencrypt"
        - "traefik.http.services.supabase-api.loadbalancer.server.port=8000"

  studio:
    image: supabase/studio:v4.2.0
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    networks:
      - app_network
      - traefik_public
    depends_on:
      - meta
      - kong
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: Ma1x1x0x!!Ma1x1x0x!!
      DEFAULT_ORGANIZATION_NAME: senaia.ai
      DEFAULT_PROJECT_NAME: senaia.ai
      SUPABASE_URL: http://kong:8000
      SUPABASE_PUBLIC_URL: https://supabase.senaia.in
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzU2ODY4NDAwLCJleHAiOjE5MTQ2MzQ4MDB9.92l2hcU3eK2GZCkzkLujEpl45fXqCN_p3Ad9qsxijao
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiaXNzIjoic3VwYWJhc2UiLCJpYXQiOjE3NTY4Njg0MDAsImV4cCI6MTkxNDYzNDgwMH0.bZ8_RsHDV_LMWXfjKbaVtC1mX4DWcrMT6iqP6EHovnI
      AUTH_JWT_SECRET: DV7ztkuZnEJWWKQ68haLZ2qIXCMRxODz
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
      labels:
        - "traefik.enable=true"
        - "traefik.constraint-label=traefik_public"
        - "traefik.http.routers.supabase-studio.rule=Host(`studio.senaia.in`)"
        - "traefik.http.routers.supabase-studio.entrypoints=websecure"
        - "traefik.http.routers.supabase-studio.tls.certresolver=letsencrypt"
        - "traefik.http.services.supabase-studio.loadbalancer.server.port=3000"

  rest:
    image: postgrest/postgrest:v12.2.8
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    networks:
      - app_network
    depends_on:
      - postgres
    environment:
      PGRST_DB_URI: postgres://supabase_auth_admin:Ma1x1x0x!!Ma1x1x0x!!@postgres:5432/supabase_db
      PGRST_DB_HOST: postgres
      PGRST_DB_PORT: 5432
      PGRST_DB_NAME: supabase_db
      PGRST_DB_USER: supabase_auth_admin
      PGRST_DB_SCHEMAS: public,storage,graphql_public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: DV7ztkuZnEJWWKQ68haLZ2qIXCMRxODz
      PGRST_OPENAPI_SERVER_PROXY_URI: https://supabase.senaia.in/rest/v1/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  meta:
    image: supabase/postgres-meta:v0.86.1
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    networks:
      - app_network
    depends_on:
      - postgres
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: postgres
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: supabase_db
      PG_META_DB_USER: supabase_admin
      PG_META_DB_PASSWORD: Ma1x1x0x!!Ma1x1x0x!!
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  storage:
    image: supabase/storage-api:v1.19.3
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    networks:
      - app_network
      - traefik_public
    volumes:
      - supabase_storage:/var/lib/storage:Z
    #user: "999:999"
    depends_on:
      - postgres
      - rest
    environment:
      ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzU2ODY4NDAwLCJleHAiOjE5MTQ2MzQ4MDB9.92l2hcU3eK2GZCkzkLujEpl45fXqCN_p3Ad9qsxijao
      SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiaXNzIjoic3VwYWJhc2UiLCJpYXQiOjE3NTY4Njg0MDAsImV4cCI6MTkxNDYzNDgwMH0.bZ8_RsHDV_LMWXfjKbaVtC1mX4DWcrMT6iqP6EHovnI
      POSTGREST_URL: http://rest:3000
      PGRST_JWT_SECRET: DV7ztkuZnEJWWKQ68haLZ2qIXCMRxODz
      DATABASE_URL: postgres://supabase_storage_admin:Ma1x1x0x!!Ma1x1x0x!!@postgres:5432/supabase_db
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: supabase_db
      DATABASE_USER: supabase_storage_admin
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: senaia
      REGION: us-east-1
      GLOBAL_S3_BUCKET: supabase-storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      labels:
        - "traefik.enable=true"
        - "traefik.constraint-label=traefik_public"
        - "traefik.http.routers.supabase-storage.rule=Host(`storage.senaia.in`)"
        - "traefik.http.routers.supabase-storage.entrypoints=websecure"
        - "traefik.http.routers.supabase-storage.tls.certresolver=letsencrypt"
        - "traefik.http.services.supabase-storage.loadbalancer.server.port=3000" 
  
volumes:
  postgres_data:
    external: true
  supabase_storage:
    external: true

networks:
  app_network:
    external: true
  traefik_public:
    external: true